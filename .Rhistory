D1 <- J - L
a <- 3*D1*n+1
b <- 3*D1*n+n
lastx <- seq(a, b, by=1)
lastx
seq.int(a,b)
IWT2_TI <- function(tiwt, L, qmf) {
n <- dim(tiwt)[2]
J <- log2(n)
D1 <- J - L
a <- 3*D1*n+1
b <- 3*D1*n+n
lastx <- seq.int(a, b)#(3 * D * n + 1):(3 * D * n + n)
lasty <- seq.int(1,n)
}
xr <- IWT2_TI(TIWT,qmf)
IWT2_TI <- function(tiwt, L, qmf) {
n <- dim(tiwt)[2]
J <- log2(n)
D1 <- J - L
print(D1)
a <- 3*D1*n+1
b <- 3*D1*n+n
lastx <- seq.int(a, b)#(3 * D * n + 1):(3 * D * n + n)
lasty <- seq.int(1,n)
}
xr <- IWT2_TI(TIWT,qmf)
IWT2_TI <- function(tiwt, L, qmf) {
n <- dim(tiwt)[2]
J <- log2(n)
D1 <- J - L
print(J)
a <- 3*D1*n+1
b <- 3*D1*n+n
lastx <- seq.int(a, b)#(3 * D * n + 1):(3 * D * n + n)
lasty <- seq.int(1,n)
}
xr <- IWT2_TI(TIWT,qmf)
IWT2_TI <- function(tiwt, L, qmf) {
n <- dim(tiwt)[2]
J <- log2(n)
D1 <- J - L
print(L)
a <- 3*D1*n+1
b <- 3*D1*n+n
}
xr <- IWT2_TI(TIWT,qmf)
source('~/Desktop/SUMMER15/ENSAI2015-2016/PackageR/rwavelet/R/IWT2_TI.R')
xr <- IWT2_TI(TIWT,L,qmf)
L
qmf
TIWT
source('~/Desktop/SUMMER15/ENSAI2015-2016/PackageR/rwavelet/R/IWT2_TI.R')
xr <- IWT2_TI(TIWT,L,qmf)
source('~/Desktop/SUMMER15/ENSAI2015-2016/PackageR/rwavelet/R/IWT2_TI.R')
xr <- IWT2_TI(TIWT,L,qmf)
xr
source('~/Desktop/SUMMER15/ENSAI2015-2016/PackageR/rwavelet/R/IWT2_TI.R')
xr <- IWT2_TI(TIWT,L,qmf)
xr
library(rwavelet)
devtools::document()
devtools::document()
library(rwavelet)
help(CVlinear)
rm(list=ls())
library(rwavelet)
library(rwavelet)
library(rwavelet)
help(CVlinear)
library(rwavelet)
help(CVlinear)
devtools::document()
devtools::build())
devtools::build()
devtools::build()
library(rwavelet)
devtools::build()
dir()
setwd('../')
devtools::build()
getwd
getwd("rwavelet/")
setwd("rwavelet/")
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
library(rwavelet)
R --version
R
version
devtools::document()
devtools::document()
library(rwavelet)
devtools::document()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::document()
devtools::build()
library(rwavelet)
devtools::build()
devtools::build()
library(deeplr)
install.packages("deeplr")
library(deeplr)
translate(dataset = sampleCh2Raw,
source.lang = "EN",
target.lang = "FR",
auth_key = "93cc5407-f2b3-84c2-1342-e6c435deb78b")
translate <- function(dataset = NULL,
column.name = NULL,
source.lang = "FR",
target.lang = "EN",
auth_key = NULL,
URL = "https://api.deepl.com/v1/translate?text="
) {
if(inherits(dataset, "character")==TRUE & length(dataset)>1){
responses <- NULL
z <- 0
for(i in dataset){
svMisc::progress(z, max.value = length(dataset))
z <- z+1
#i <- stringr::str_replace(gsub("\\s+", "%20", stringr::str_trim(i)), "B", "b")
#special caracters ascii conversion
i <- gsub("%", "%25", i )
i <- gsub("&", "%26", i )
i <- gsub("#", "%23", i )
i <- gsub("\\s+", "%20", stringr::str_trim(i))
# i <- gsub("%", paste0("\\", "u00"), i , fixed = T)
response.i <- GET(paste(URL,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
respcontent.i <- httr::content(response.i, as="text", encoding = "UTF-8")
result.i <- jsonlite::fromJSON(respcontent.i)$translations$text
responses <- c(responses, result.i)
}
return(responses)
}
}
translate(dataset = sampleCh2Raw,
source.lang = "EN",
target.lang = "FR",
auth_key = "93cc5407-f2b3-84c2-1342-e6c435deb78b")
sampleCh2Raw <- scan('sample-ch2-raw', " ", sep = "\n")
sampleCh2 <- scan('sample-ch2', " ", sep = "\n")
translate(dataset = sampleCh2Raw,
source.lang = "EN",
target.lang = "FR",
auth_key = "93cc5407-f2b3-84c2-1342-e6c435deb78b")
translate <- function(dataset = NULL,
column.name = NULL,
source.lang = "FR",
target.lang = "EN",
auth_key = NULL,
URL = "https://api.deepl.com/v1/translate?text="
) {
if(inherits(dataset, "character")==TRUE & length(dataset)>1){
responses <- NULL
z <- 0
for(i in dataset){
svMisc::progress(z, max.value = length(dataset))
z <- z+1
#i <- stringr::str_replace(gsub("\\s+", "%20", stringr::str_trim(i)), "B", "b")
#special caracters ascii conversion
i <- gsub("%", "%25", i )
i <- gsub("&", "%26", i )
i <- gsub("#", "%23", i )
i <- gsub("\\s+", "%20", stringr::str_trim(i))
# i <- gsub("%", paste0("\\", "u00"), i , fixed = T)
response.i <- GET(paste(URL,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
respcontent.i <- httr::content(response.i, as="text", encoding = "UTF-8")
result.i <- jsonlite::fromJSON(respcontent.i)$translations$text
responses <- c(responses, result.i)
}
return(responses)
}
}
tmp <- "https://api.deepl.com/v1/usage?auth_key=93cc5407-f2b3-84c2-1342-e6c435deb78b"
httr::content(GET(tmp), as="text", encoding = "UTF-8")
samplech2tmp <- scan('sample-ch2', " ", sep = "\n")
translate(dataset = samplech2tmp,
source.lang = "EN",
target.lang = "FR",
auth_key = "93cc5407-f2b3-84c2-1342-e6c435deb78b")
install.packages("svMisc")
samplech2tmp <- scan('sample-ch2', " ", sep = "\n")
translate(dataset = samplech2tmp,
source.lang = "EN",
target.lang = "FR",
auth_key = "93cc5407-f2b3-84c2-1342-e6c435deb78b")
tmp <- "https://api.deepl.com/v1/usage?auth_key=93cc5407-f2b3-84c2-1342-e6c435deb78b"
httr::content(GET(tmp), as="text", encoding = "UTF-8")
install.packages("httr")
install.packages("httr")
translate <- function(dataset = NULL,
column.name = NULL,
source.lang = "FR",
target.lang = "EN",
auth_key = NULL,
URL = "https://api.deepl.com/v1/translate?text="
) {
if(inherits(dataset, "character")==TRUE & length(dataset)>1){
responses <- NULL
z <- 0
for(i in dataset){
svMisc::progress(z, max.value = length(dataset))
z <- z+1
#i <- stringr::str_replace(gsub("\\s+", "%20", stringr::str_trim(i)), "B", "b")
#special caracters ascii conversion
i <- gsub("%", "%25", i )
i <- gsub("&", "%26", i )
i <- gsub("#", "%23", i )
i <- gsub("\\s+", "%20", stringr::str_trim(i))
# i <- gsub("%", paste0("\\", "u00"), i , fixed = T)
response.i <- GET(paste(URL,
i,
"&source_lang=", source.lang,
"&target_lang=", target.lang,
"&auth_key=", auth_key
, sep = ""))
respcontent.i <- httr::content(response.i, as="text", encoding = "UTF-8")
result.i <- jsonlite::fromJSON(respcontent.i)$translations$text
responses <- c(responses, result.i)
}
return(responses)
}
}
tmp <- "https://api.deepl.com/v1/usage?auth_key=93cc5407-f2b3-84c2-1342-e6c435deb78b"
httr::content(GET(tmp), as="text", encoding = "UTF-8")
library("httr")
tmp <- "https://api.deepl.com/v1/usage?auth_key=93cc5407-f2b3-84c2-1342-e6c435deb78b"
httr::content(GET(tmp), as="text", encoding = "UTF-8")
samp <- scan('sample-ch2-tmp.txt', "", sep = "\n")
samplech2tmp <- scan('sample-ch2', " ", sep = "\n")
translate(dataset = samplech2tmp,
source.lang = "EN",
target.lang = "FR",
auth_key = "93cc5407-f2b3-84c2-1342-e6c435deb78b")
help(package=glmnet)
help(package="dplyr")
x <- MakeSignal('Ramp', 8)
library(rwavelet
)
x <- MakeSignal('Ramp', 8)
x
j0 <- 0
qmf <- MakeONFilter('Haar')
wc <- FWT_PO(x, j0, qmf)
wcb <- block_partition(x, L)
L=2
wcb <- block_partition(x, L)
wcb
wc
wcb <- block_partition(wc, L)
wcb
devtools::document()
devtools::document()
formatR::tidy_file("R/block_partition.R",width.cutoff = 76,arrow = T,indent=2)
formatR::tidy_file("R/block_partition.R",width.cutoff = 76,arrow = T,indent=2)
devtools::document()
x <- matrix(rnorm(2^2), ncol=2)
wc <- FWT2_PO(x, j0, qmf)
wcb <- block_partition(wc, L)
wcb
wc
wcb <- block_partition2d(wc, L)
wcb
devtools::document()
x <- MakeSignal('Ramp', 8)
x
y <- x + rnorm(8)
y
x <- MakeSignal('Ramp', 8)
sig <- 0.01
y <- x + rnorm(8, sd=sig)
y
x
j0 <- 0
qmf <- MakeONFilter('Haar')
qmf <- MakeONFilter('Daubechies',8)
qmf
wc <- FWT_PO(y, j0, qmf)
wc
L <- 2
wcb <- BlockThresh(wc, L, j0, sig, L, qmf)
wcb <- BlockThresh(wc, L, j0, sig, L, qmf, "hard")
wcb <- BlockThresh(wc, j0, sig, L, qmf)
L
j0
BlockThresh(wc, j0, sig, L, qmf, "hard")
n <- 64
x <- MakeSignal('Ramp', n)
sig <- 0.01
y <- x + rnorm(n, sd=sig)
j0 <- 0
qmf <- MakeONFilter('Daubechies',8)
wc <- FWT_PO(y, j0, qmf)
L <- 2
wcb <- BlockThresh(wc, j0, sig, L, qmf, "hard")
wcb
j0 <- 1
wc <- FWT_PO(y, j0, qmf)
wcb <- BlockThresh(wc, j0, sig, L, qmf, "hard")
wcb
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
n <- 8
x <- MakeSignal('Ramp', n)
j0 <- 1
qmf <- MakeONFilter('Haar')
wc <- FWT_PO(x, j0, qmf)
L <- 2
wcb <- block_partition(wc, L)
wcb
wcib <- invblock_partition(wcb, n, L)
wcib
devtools::document()
n <- 4
x <- matrix(rnorm(n), ncol=2)
j0 <- 1
qmf <- MakeONFilter('Haar')
wc <- FWT2_PO(x, j0, qmf)
j0=0
wc <- FWT2_PO(x, j0, qmf)
L <- 2
wcb <- block_partition2d(wc, L)
wcb
wcib <- invblock_partition2d(wcb, n, L )
wcib
x
invblock_partition2d(wcb, n, L)
invblock_partition2d(wcb, 2, L)
wcib
wcib <- invblock_partition2d(wcb, 2, L)
wcib
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
PlotSpikes(base, t, x, L, J)
PlotSpikes(base, t, x, L, J)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
repmat(10,3,2)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(Rcpp)
vignette("Rcpp-introduction")
library(imager)
clist <- c('airplane.png','barbara.png','boat.png','couple.png','elaine.png','fingerprint.png','goldhill.png','lena.png','man.png','mandrill.png','peppers.png','stream.png')
for(k in (1:length(clist))){
tt=load.image(clist[k])
plot(tt,axes=F,interpolate = F)
#display(tt)
}
library(imager)
clist <- c('airplane.png','barbara.png','boat.png','couple.png','elaine.png','fingerprint.png','goldhill.png','lena.png','man.png','mandrill.png','peppers.png','stream.png')
for(k in (1:length(clist))){
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/",clist[k])
plot(tt,axes=F,interpolate = F)
#display(tt)
}
library(imager)
clist <- c('airplane.png','barbara.png','boat.png','couple.png','elaine.png','fingerprint.png','goldhill.png','lena.png','man.png','mandrill.png','peppers.png','stream.png')
for(k in (1:length(clist))){
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/",clist[k]))
plot(tt,axes=F,interpolate = F)
#display(tt)
}
tt
paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/",clist[k])
library(imager)
clist <- c('airplane.png','barbara.png','boat.png','couple.png','elaine.png','fingerprint.png','goldhill.png','lena.png','man.png','mandrill.png','peppers.png','stream.png')
for(k in (1:length(clist))){
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/",clist[k], sep=""))
plot(tt,axes=F,interpolate = F)
#display(tt)
}
tt
as.matrix(tt)
as.array(squeeze(tt))
dim(as.array(squeeze(tt)))
summary(as.array(squeeze(tt)))
max(as.array(squeeze(tt)))
for(k in (1:length(clist))){
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/",clist[k], sep=""))
#plot(tt,axes=F,interpolate = F)
#display(tt)
max(as.array(squeeze(tt)))
}
for(k in (1:length(clist))){
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/",clist[k], sep=""))
#plot(tt,axes=F,interpolate = F)
#display(tt)
print(max(as.array(squeeze(tt))))
}
help("save")
dir()
clist[k]
file_path_sans_ext
library("tools")
file_path_sans_ext
file_path_sans_ext(clist[k])
for(k in (1:length(clist))){
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/",clist[k], sep=""))
#plot(tt,axes=F,interpolate = F)
#display(tt)
save(as.array(squeeze(tt)),
file = paste(file_path_sans_ext(clist[k]),".rda", sep=""))
}
as.array(squeeze(tt))
for(k in (1:length(clist))){
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/",clist[k], sep=""))
#plot(tt,axes=F,interpolate = F)
#display(tt)
x  = as.array(squeeze(tt))
save(x,
file = paste(file_path_sans_ext(clist[k]),".rda", sep=""))
}
dir()
rm(list=ls)
rm(list=ls())
load("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/rwavelet/stream.rda")
x
plot(x)
image(x)
library(wavethresh)
help("lennon")
devtools::document()
devtools::document()
dir()
k=1
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/",clist[k], sep=""))
lena  = as.array(squeeze(tt))
save(lena,
file = paste(file_path_sans_ext(clist[k]),".rda", sep=""))
library(imager)
library(tools)
k=1
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/",clist[k], sep=""))
lena  = as.array(squeeze(tt))
save(lena,
file = paste(file_path_sans_ext(clist[k]),".rda", sep=""))
k=1
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/",clist[k], sep=""))
clist <- c('airplane.png','barbara.png','boat.png','couple.png','elaine.png','fingerprint.png','goldhill.png','lena.png','man.png','mandrill.png','peppers.png','stream.png')
k=1
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/",clist[k], sep=""))
lena  = as.array(squeeze(tt))
save(lena,
file = paste(file_path_sans_ext(clist[k]),".rda", sep=""))
k=1
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/","lena.png", sep=""))
lena  = as.array(squeeze(tt))
save(lena,
file = paste(file_path_sans_ext(clist[k]),".rda", sep=""))
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/","lena.png", sep=""))
lena  = as.array(squeeze(tt))
save(lena,
file = paste("lena",".rda", sep=""))
tt=load.image(paste("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/BlockTresh/execfig/images512Dataset/","lena.png", sep=""))
lena  = as.array(squeeze(tt))
save(lena,
file = paste("lena",".rda", sep=""),
compress = "bzip2")
load("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/DivPkg/wavethresh 2/data/lennon.rda")
View(lennon)
dim(lennon)
dim(lena)
load("/Users/fnavarro/Desktop/SUMMER15/ENSAI2015-2016/PackageR/rwavelet/data/lena.rda")
rm(list="ls")
rm(list=ls())
